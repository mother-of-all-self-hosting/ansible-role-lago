# SPDX-FileCopyrightText: 2023 Slavi Pantaleev
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---

- name: Ensure Lago API paths exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: "{{ lago_uid }}"
    group: "{{ lago_gid }}"
  with_items:
    - "{{ lago_api_base_path }}"
    - "{{ lago_api_data_path }}"

- name: Ensure Lago API support files installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/api/{{ item }}.j2"
    dest: "{{ lago_api_base_path }}/{{ item }}"
    mode: 0640
    owner: "{{ lago_uid }}"
    group: "{{ lago_gid }}"
  with_items:
    - env
    - labels

- name: Ensure Lago API container image is pulled
  community.docker.docker_image:
    name: "{{ lago_api_container_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ lago_api_container_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else lago_api_container_image_force_pull }}"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure Lago API container network is created
  community.general.docker_network:
    name: "{{ lago_api_container_network }}"
    driver: bridge

- name: Ensure Lago API systemd service is present
  ansible.builtin.template:
    src: "{{ role_path }}/templates/api/systemd/lago-api.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ lago_identifier }}-api.service"
